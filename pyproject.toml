[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sgfa-qmap-pd"
version = "0.1.0"
description = "Sparse Group Factor Analysis for quantitative MRI Parkinson's Disease subtyping"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SGFA qMAP-PD Research Team"},
]
keywords = ["neuroimaging", "parkinson's disease", "factor analysis", "qMRI", "bayesian analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
    "jax>=0.4.0",
    "jaxlib>=0.4.0",
    "numpyro>=0.12.0",
    "arviz>=0.11.0",
    "tqdm>=4.60.0",
    "pyyaml>=5.4.0",
]

[project.optional-dependencies]
neuroimaging = [
    "nibabel>=3.2.0",
    "nilearn>=0.8.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
]
performance = [
    "psutil>=5.8.0",
    "memory-profiler>=0.58.0",
]

[project.urls]
Homepage = "https://github.com/your-org/sgfa-qmap-pd"
Documentation = "https://sgfa-qmap-pd.readthedocs.io/"
Repository = "https://github.com/your-org/sgfa-qmap-pd.git"
"Bug Tracker" = "https://github.com/your-org/sgfa-qmap-pd/issues"

[project.scripts]
sgfa-analysis = "core.run_analysis:main"

[tool.setuptools]
packages = ["core", "experiments", "models", "data", "analysis", "visualization", "performance", "tools"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=core",
    "--cov=experiments",
    "--cov=models",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["core", "experiments", "models", "data", "analysis", "visualization", "performance"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]